
* Package Manager
#+begin_src emacs-lisp
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
#+end_src

* Basic UI
** Font
#+begin_src emacs-lisp
(set-face-attribute 'default nil :family "Iosevka" :height 140)
#+end_src

** Themes
#+begin_src emacs-lisp
  (straight-use-package 'doom-themes)

  (load-theme 'doom-material t)
  (doom-modeline-mode 1)
  (setq doom-modeline-height 45)
#+end_src

** Dashboard

#+begin_src emacs-lisp
   (straight-use-package 'dashboard)
    
  (dashboard-setup-startup-hook)
  (setq dashboard-startup-banner 'logo)
  (setq dashboard-center-content t)
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  (setq dashboard-set-init-info t)
  (setq dashboard-projects-backend 'projectile)
  (setq initial-buffer-choice (lambda () (get-buffer "*dashboard*")))
  (setq dashboard-items '((recents  . 5)
                          (bookmarks . 5)
                          (projects . 5)
                          (agenda . 5)
                          (registers . 5)))
  ;
#+end_src

** Dimmer
[[https://github.com/gonewest818/dimmer.el][dimmer]] provides a minor mode that indicates which buffer is currently active by dimming the faces in the other buffers. It does this nondestructively, and computes the dimmed faces dynamically such that your overall color scheme is shown in a muted form without requiring you to define what is a "dim" version of every face.

#+begin_src emacs-lisp
  (straight-use-package 'dimmer)

  (require 'dimmer)
  (dimmer-configure-which-key)
  (dimmer-configure-helm)
  (dimmer-configure-magit)
  (dimmer-configure-which-key)
  (dimmer-configure-org)
  (dimmer-mode t)
#+end_src

** Modeline
[[https://github.com/seagle0128/doom-modeline][doom-modeline]] is the line used at the bottom of the screen.

#+begin_src emacs-lisp
  (straight-use-package 'doom-modeline)

  (doom-modeline-mode 1)
  (setq doom-modeline-height 45)
#+end_src
** Other Visual Improvements
- Line Highlighting
- Show Matching Parenthesis
  
#+begin_src emacs-lisp
  (straight-use-package 'page-break-lines)
  (straight-use-package 'all-the-icons)

  ;; hide GUI
  (menu-bar-mode -1)
  (toggle-scroll-bar -1)
  (tool-bar-mode -1)


  ;; Line highlighting
  (global-hl-line-mode 0)

  ;; Show matching parenthesis
  (show-paren-mode 1)

  ;; scroll off
  (setq scroll-margin 7)
  (setq scroll-conservatively 999) ;; do not center when scrolling

  ;; disable bell
  (setq ring-bell-function 'ignore)

  ;; Line numbering
  ; only show numbers in programming buffers
  (add-hook 'prog-mode-hook 'display-line-numbers-mode)
  (setq display-line-numbers-type 'relative)	

  ;; hide scroll bar in new frames
  (defun my/disable-scroll-bars (frame)
  (modify-frame-parameters frame
                              '((vertical-scroll-bars . nil)
                              (horizontal-scroll-bars . nil))))
  (add-hook 'after-make-frame-functions 'my/disable-scroll-bars)

#+end_src

* Evil Mode 
Get vim-like functionality in emacs with [[https://github.com/emacs-evil/evil][evil]]. Then evil numbers
    
    #+begin_src emacs-lisp
    (straight-use-package 'evil-nerd-commenter)
    (straight-use-package 'evil-snipe)

        (straight-use-package 'evil)
    (straight-use-package 'evil-leader)
    (straight-use-package 'evil-org)

        (require 'evil)
    (setq evil-want-C-u-scroll t)   ; use C-u to scroll up in normal mode
    (require 'evil-nerd-commenter)
    (require 'evil-org)
    (add-hook 'org-mode-hook 'evil-org-mode)
    (evil-org-set-key-theme '(navigation insert textobjects additional calendar))
    (require 'evil-org-agenda)
    (evil-org-agenda-set-keys)
    (global-evil-leader-mode)
(evil-mode 1)
(evil-snipe-mode 1)
#+end_src

** Evil Snipe

** Evil Nerd commenter
